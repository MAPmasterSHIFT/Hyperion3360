// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3360.VIKing.subsystems;

import org.usfirst.frc3360.VIKing.Robot;
import org.usfirst.frc3360.VIKing.RobotMap;
import org.usfirst.frc3360.VIKing.commands.*;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class SuperPunch extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon CamMotor = RobotMap.superPunchReloaderMotor;
    private final DigitalInput CamSwitch = new DigitalInput(0);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void shoot(boolean auto){
    	
    		System.out.println("limit switch" + !CamSwitch.get());
        	if(!isLoaded()){
    		shooterSet(1);
        	}
        	else if (Robot.oi.getCoPilotJoystick().getRawButton(12) || 
        			 Robot.oi.getJoystickRight().getRawButton(1)){
        		shooterSet(1);
        	}
        	else if (auto)
        	{
        		shooterSet(1);
        	}
        	else{
        		shooterSet(0);
        	}
    	
    }
    public boolean isLoaded(){
    	return !CamSwitch.get();
    }
    
    public void shooterSet(double speed){
    	CamMotor.set(speed);
    }
    
    
}

